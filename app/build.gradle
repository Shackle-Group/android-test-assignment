plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.example.shacklehotelbuddy'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.shacklehotelbuddy"
        minSdk 24
        targetSdk 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //room database schema
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/dbschemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = "17"
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.2"
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/*'
        }
    }
    testOptions { packagingOptions { jniLibs { useLegacyPackaging = true } } }
}

dependencies {
    // Ktx.
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleKtxVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKtxVersion" // remove it in the future.
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleKtxVersion"
    implementation "androidx.lifecycle:lifecycle-service:$lifecycleKtxVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
    implementation "androidx.activity:activity-ktx:$activityKtxVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.preference:preference-ktx:$preferenceKtxVersion"

    // Material design.
    implementation 'androidx.compose.material3:material3'
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"

    // Compose.
    implementation "androidx.compose.ui:ui-tooling-preview-android:$composePreviewVersion"
    implementation "androidx.compose.ui:ui-tooling:$composePreviewVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$composeHiltNavigationVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$composeLifecycleRuntimeVersion"
    implementation "com.google.accompanist:accompanist-pager:$viewPagerGoogleExtensionVersion"
    implementation("io.coil-kt:coil-compose:$coilComposeVersion")
    def composeBom = platform("androidx.compose:compose-bom:$composeDoomVersion")
    implementation composeBom
    androidTestImplementation composeBom

    // DI.
    implementation "com.google.dagger:dagger-android-support:$hiltVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-compiler:$hiltVersion"

    // Server communications.
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2Version"

    // Room.
    implementation("androidx.room:room-runtime:$roomVersion")
    annotationProcessor("androidx.room:room-compiler:$roomVersion")
    implementation("androidx.room:room-ktx:$roomVersion")
    kapt "androidx.room:room-compiler:$roomVersion"

    // Others.
    implementation("com.valentinilk.shimmer:compose-shimmer:$shimmerAnimationLib")

    // *************** JUnit tests libs *******************
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "androidx.room:room-testing:$roomVersion"
    // For retrofit api testing.
    testImplementation "com.squareup.okhttp3:mockwebserver:$mockWebServerVersion"
    testImplementation "org.json:json:$testJsonVersion"

    // *************** Android JUnit tests *******************
    androidTestImplementation "androidx.arch.core:core-testing:$coreTestingVersion"
    androidTestImplementation "androidx.test:rules:$rulesVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"
    androidTestImplementation "androidx.work:work-testing:$workRuntimeKtxVersion"

    androidTestImplementation platform("androidx.compose:compose-bom:$composeDoomVersion")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-tooling"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}